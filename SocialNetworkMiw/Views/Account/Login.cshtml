@model SocialNetworkMiw.Models.LoginViewModel
@inject Microsoft.Extensions.Configuration.IConfiguration Configuration
@{
    ViewData["Title"] = "Login";
}

<h1>Log in</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Login">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Password" class="control-label"></label>
                <input asp-for="Password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Log in" class="btn btn-primary" />
            </div>
            <input type="hidden" name="captcha" id="captchaInput" />
        </form>
    </div>
</div>

<div>
    <a asp-controller="Account" asp-action="Create">Register as a new user</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="https://www.google.com/recaptcha/api.js?render=@Configuration["googleReCaptcha:SiteKey"]"></script>
    <script>
        grecaptcha.ready(function() {
            window.grecaptcha.execute('@Configuration["googleReCaptcha:SiteKey"]', { action: 'Account' }).then(function (token) {
                $("#captchaInput").val(token);
            });
        });
    </script>
}


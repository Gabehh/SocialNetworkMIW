@model SocialNetworkMiw.Models.PorfileViewModel
@using SocialNetworkMiw.Models
@{
    ViewData["Title"] = Model.Name;
}
<div class="row">
    <div class="col-md-4">
        <img src="@Url.Content(Model.ImageUrl)" style="width:100px;height:100px" />
        @if (Model.Porfile == TypePorfile.Porfile.User)
        {
            <a href="@Url.Action("Edit", "Porfile", new { id = Model.Id })" style="float:right" class="btn btn-primary btn-lg active" role="button" aria-pressed="true">Editar</a>
        }
        <hr />
        <dl class="row">
            <dt class="col-sm-12" style="color:steelblue">
                @Html.DisplayFor(model => model.Name)
            </dt>
            <dt class="col-sm-3">
                @Html.DisplayNameFor(model => model.Job)
            </dt>
            <dd class="col-sm-9">
                @Html.DisplayFor(model => model.Job)
            </dd>
            <dt class="col-sm-3">
                @Html.DisplayNameFor(model => model.City)
            </dt>
            <dd class="col-sm-9">
                @Html.DisplayFor(model => model.City)
            </dd>
            <dt class="col-sm-3">
                @Html.Label("Friends")
            </dt>
            <dd class="col-sm-9">
                @Html.ActionLink(@Model.Friends == null ? "0" : @Model.Friends.Count().ToString(), "Details", "Friend", new { id = Model.Id })
            </dd>
            @if (!(Model.Porfile == TypePorfile.Porfile.Unknown))
            {
                <dt class="col-sm-3">
                    @Html.DisplayNameFor(model => model.Email)
                </dt>
                <dd class="col-sm-9">
                    @Html.DisplayFor(model => model.Email)
                </dd>
                <dt class="col-sm-3">
                    @Html.DisplayNameFor(model => model.BirthDate)
                </dt>
                <dd class="col-sm-9">
                    @Html.DisplayFor(model => model.BirthDate)
                </dd>
                <dt class="col-sm-3">
                    @Html.DisplayNameFor(model => model.BornIn)
                </dt>
                <dd class="col-sm-9">
                    @Html.DisplayFor(model => model.BornIn)
                </dd>
            }
            else
            {
                var claimsIdentity = User.Identity as System.Security.Claims.ClaimsIdentity;
                var id = claimsIdentity.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier).Value;

                @if (Model.Friends.Any(u => u.Id == id))
                {
                    <dd class="col-sm-10">
                        <label>Friends</label>
                    </dd>
                }
                else if (!Model.FriendRequests.Any(u => u.UserId == id))
                {
                    if (Model.CurrentUserRequests.Any(u => u.UserId == Model.Id))
                    {
                        FriendRequest friendRequest = Model.CurrentUserRequests.Single(u => u.UserId == Model.Id);
                        <dd class="col-sm-10">
                            <a href="@Url.Action("Accept", "Notification", new { idFrindRequest = friendRequest.Id })" class="btn btn-primary btn-lg active" role="button" aria-pressed="true">Confirm</a>
                        </dd>
                    }
                    else
                    {
                        <dd class="col-sm-10">
                            <a href="@Url.Action("AddFriend", "Porfile", new { id = Model.Id })" class="btn btn-primary btn-lg active" role="button" aria-pressed="true">Add Friend</a>
                        </dd>

                    }
                }
                else
                {
                    <dd class="col-sm-10">
                        <label>Friend Request Sent</label>
                    </dd>
                }
            }
        </dl>
        <hr />
    </div>

    @if (!(Model.Porfile == TypePorfile.Porfile.Unknown))
    {
        <div class="col-md-6">
            @if (Model.Porfile == TypePorfile.Porfile.User)
            {
                @await Component.InvokeAsync("CreatePost")
            }

            @await Component.InvokeAsync("ShowPosts", Model.Posts)
        </div>
    }

</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/js/comment.js"></script>
}

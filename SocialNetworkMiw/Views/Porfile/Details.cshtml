@model SocialNetworkMiw.Models.PorfileViewModel
@using SocialNetworkMiw.Models
@{
    ViewData["Title"] = Model.Name;
}
    <div>
        <h4>@Model.Name</h4>
        <hr />
        <dl class="row">
            @if (!(Model.Porfile == TypePorfile.Porfile.Unknown))
            {
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Email)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Email)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.BirthDate)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.BirthDate)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Job)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Job)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.BornIn)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.BornIn)
                </dd>
            }
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.City)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.City)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Friends)
            </dt>
            <dd class="col-sm-10">
                @Html.Label(@Model.Friends == null ? "0" : @Model.Friends.Count().ToString())
            </dd>
        </dl>
        @if (!(Model.Porfile == TypePorfile.Porfile.Unknown))
        {
            if (Model.Porfile == TypePorfile.Porfile.User)
            {
                @await Component.InvokeAsync("CreatePost");
            }

            @foreach (var post in Model.Posts)
            {
                if (@post.Type == "image")
                {
                    <img src="@Url.Content(post.FileUrl)" />
                }
                else
                {
                    <iframe src="@Url.Content(post.FileUrl)"></iframe>
                }
                <br />
                <h1>@post.Description</h1>
                <div id="@post.Id">
                    @if (post.Comments != null)
                    {
                        @foreach (var comment in post.Comments)
                        {
                            <label class="control-label"> @comment.User (@comment.DateTime) said: @comment.Description </label><br />
                        }
                    }
                </div>
                <form>
                    <div class="form-group">
                        <input placeholder="Write a comment" class="form-control @post.Id" />
                    </div>
                    <div class="form-group">
                        <input type="button" value="Send" onclick="WriteComment('@post.Id',$('.@post.Id').val())" class="btn btn-primary" />
                    </div>
                </form>
            }
        }
    </div>
<div>
    @Html.ActionLink("Edit", "Edit", new { /* id = Model.PrimaryKey */ }) |
    <a asp-action="Index">Back to List</a>
</div>

<script>
    function WriteComment(post, comment) {
        var url = '/Porfile/WriteComment';
        fetch(url, {
            method: 'POST',
            body: JSON.stringify({ IdPost: post, Comment: comment }),
            headers: {
                'Content-Type': 'application/json'
            }
        }).then(function (response) {
            if (response.status == 200) {
                response.json().then(function (data) {
                    if (data.isValid) {
                        var date = new Date(data.comment.dateTime)
                        $("#" + post).append('<label class="control-label">' + data.comment.user +
                            ' (' + (date.toLocaleString()) + ') said: ' + data.comment.description + ' </label><br />');
                        $("."+post).val("");
                    }
                    else {
                        alert("error");
                    }
                });
            }
        })
        .catch(function (err) {
            console.log(`error: ${err}`);
        });
    }

</script>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
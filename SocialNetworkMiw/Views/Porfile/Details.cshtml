@model SocialNetworkMiw.Models.PorfileDetailsViewModel
@using SocialNetworkMiw.Models
@using Microsoft.AspNetCore.Http
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

@{
    ViewData["Title"] = Model.Name;
}
<div class="row">
    <div class="col-md-4">
        <div>
            <img src="@Url.Content(Model.ImageUrl)" style="width:225px;height:225px" />
        </div>

        @if (Model.Porfile == TypePorfile.Porfile.User)
        {
            <a href="@Url.Action("Edit", "Porfile", new { id = Model.Id })" class="btn btn-outline-secondary" style="margin-top:10px;width:auto" role="button" aria-pressed="true">Edit Porfile</a>
        }
        else if (Model.Porfile == TypePorfile.Porfile.Friend)
        {
            <button type="button" class="btn btn-outline-danger" data-toggle="modal" style="margin-top:10px" data-target="#modalDelete">
                Delete Friend
            </button>
            <a href="@Url.Action("Index", "Chat", new { id = Model.Id })" style="margin-top:10px" class="btn btn-outline-primary" role="button" aria-pressed="true">Chat</a>
        }
        <hr />
        <dl class="row">
            <dt class="col-sm-12" style="color:steelblue">
                @Html.DisplayFor(model => model.Name)
            </dt>
            <dt class="col-sm-3">
                @Html.DisplayNameFor(model => model.Job)
            </dt>
            <dd class="col-sm-9">
                @Html.DisplayFor(model => model.Job)
            </dd>
            <dt class="col-sm-3">
                @Html.DisplayNameFor(model => model.City)
            </dt>
            <dd class="col-sm-9">
                @Html.DisplayFor(model => model.City)
            </dd>
            <dt class="col-sm-3">
                @Html.Label("Friends")
            </dt>
            <dd class="col-sm-9">
                @Html.ActionLink(@Model.Friends == null ? "0" : @Model.Friends.Count().ToString(), "Details", "Friend", new { id = Model.Id })
            </dd>
            @if (!(Model.Porfile == TypePorfile.Porfile.Unknown))
            {
                <dt class="col-sm-3">
                    @Html.DisplayNameFor(model => model.Email)
                </dt>
                <dd class="col-sm-9">
                    @Html.DisplayFor(model => model.Email)
                </dd>
                <dt class="col-sm-3">
                    @Html.DisplayNameFor(model => model.BirthDate)
                </dt>
                <dd class="col-sm-9">
                    @Html.DisplayFor(model => model.BirthDate.Date)
                </dd>
                <dt class="col-sm-3">
                    @Html.DisplayNameFor(model => model.BornIn)
                </dt>
                <dd class="col-sm-9">
                    @Html.DisplayFor(model => model.BornIn)
                </dd>

            }
            else
            {
                var id = HttpContextAccessor.HttpContext.Session.GetString("UserId");

                @if (Model.Friends.Any(u => u.Id == id))
                {
                    <dd class="col-sm-10">
                        <label>Friends</label>
                    </dd>
                }
                else if (!Model.FriendRequests.Any(u => u.UserId == id))
                {
                    if (Model.CurrentUserRequests.Any(u => u.UserId == Model.Id))
                    {
                        FriendRequest friendRequest = Model.CurrentUserRequests.Single(u => u.UserId == Model.Id);
                        <dd class="col-sm-10">


                            @using (Html.BeginForm("Accept", "Notification"))
                            {
                                var url = @Context.Request.Path + @Context.Request.QueryString;
                                @Html.AntiForgeryToken();
                                <input type="hidden" id="idFrindRequest" name="idFrindRequest" value="@friendRequest.Id" />
                                <input type="hidden" id="returnUrl" value="@url" name="returnUrl" />
                                <input type="submit"  class="btn btn-outline-primary" role="button" aria-pressed="true" value="Confirm" />
                            }
                        </dd>
                    }
                    else
                    {
                        <dd class="col-sm-10">


                            @using (Html.BeginForm("AddFriend", "Friend"))
                            {
                                var url = @Context.Request.Path + @Context.Request.QueryString;
                                @Html.AntiForgeryToken();
                                <input type="hidden" id="userId" name="userId" value="@Model.Id"/>
                                <input type="hidden" id="returnUrl" value="@url" name="returnUrl" />
                                <input type="submit" class="btn btn-outline-primary" value="Add Friend" />
                            }

                        </dd>

                    }
                }
                else
                {
                    <dd class="col-sm-10">
                        <label>Friend Request Sent</label>
                    </dd>
                }
            }
        </dl>
        <hr />
        @if (!(Model.Porfile == TypePorfile.Porfile.Unknown))
        {
            if (Model.Posts.Any())
            {
                <dl class="row">
                    <dt class="col-sm-12" style="color:steelblue">
                        <a href="@Url.Action("Photos", "Porfile", new { id = Model.Id })">
                            Photos
                        </a>
                    </dt>
                </dl>
                <div class="row">
                    @foreach (var post in Model.Posts.Take(9))
                    {
                        if (@post.Post.Type == "image")
                        {
                            <a href="@Url.Content(post.Post.FileUrl)"><img src="@Url.Content(post.Post.FileUrl)" style="width:100px;height:100px;margin:10px" /></a>
                        }
                    }
                </div>
                <hr />
            }
            if (Model.Friends.Any())
            {
                <dl class="row">
                    <dt class="col-sm-12" style="color:steelblue">
                        <a href="@Url.Action("Details", "Friend", new { id = Model.Id })">
                            Friends
                        </a>
                    </dt>
                </dl>
                <div class="row">
                    @foreach (var friend in Model.Friends.Take(9))
                    {
                        <a href="@Url.Action("Details", "Porfile", new { id = friend.Id })"><img src="@Url.Content(friend.ImageUrl)" style="width:100px;height:100px;margin:10px" /></a>
                    }
                </div>
                <hr />
            }
        }
    </div>

    @if (!(Model.Porfile == TypePorfile.Porfile.Unknown))
    {
        <div class="col-md-8">
            @if (Model.Porfile == TypePorfile.Porfile.User)
            {
                @await Component.InvokeAsync("CreatePost")
            }
            @await Component.InvokeAsync("ShowPosts", Model.Posts)
        </div>
    }

</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/js/comment.js"></script>
}


<div class="modal fade" id="modalDelete" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Delete Friend</h5>
            </div>
            <div class="modal-body">
                Do you want to delete this friend ?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-dark" data-dismiss="modal">Cancel</button>
                @using (Html.BeginForm("DeleteFriend", "Friend"))
                {
                    var url = @Context.Request.Path + @Context.Request.QueryString;
                    @Html.AntiForgeryToken();
                    <input type="hidden" id="friendId" name="friendId" value="@Model.Id"/>
                    <input type="hidden" id="returnUrl" value="@url" name="returnUrl" />
                    <input type="submit" class="btn btn-outline-danger" role="button" aria-pressed="true" value="Delete Friend" />
                }
            </div>
        </div>
    </div>
</div>